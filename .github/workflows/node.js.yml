name: Node.js CI/CD pipeline with Docker, ECR, SonarQube, and OWASP

on:
  push:
    branches: [ "main" ]

env:
  DOCKER_IMAGE: my-nodejs-app
  DOCKER_REGISTRY: docker.io
  ECR_REPOSITORY: my-nodejsapp

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            test-results/
            coverage/

      - name: Trivy scan Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_IMAGE }}:latest
          format: 'table'
          exit-code: '1'

      - name: OWASP Dependency-Check
        uses: dependency-check/scan-action@v6
        with:
          project: my-nodejs-app
          scan: './'
          format: 'ALL'
          fail-on-vuln: 'true'

     
      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: .
          organization: ${{ secrets.SONAR_ORG }}
          token: ${{ secrets.SONAR_TOKEN }}

    
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ env.DOCKER_IMAGE }} .

      - name: Tag Docker image for Docker Hub
        run: docker tag ${{ env.DOCKER_IMAGE }}:latest ${{ secrets.DOCKERHUB_USERNAME }}/my-nodejsapp:latest

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-nodejsapp:latest

    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin <AWS_ACCOUNT_ID>.dkr.ecr.us-east-1.amazonaws.com

      - name: Tag Docker image for ECR
        run: docker tag ${{ env.DOCKER_IMAGE }}:latest <AWS_ACCOUNT_ID>.dkr.ecr.us-east-1.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest

      - name: Push Docker image to ECR
        run: docker push <AWS_ACCOUNT_ID>.dkr.ecr.us-east-1.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest
